import pandas as pd
import re
f = open('./data/1_fb_crawling.txt', 'r', encoding='utf8')
shop_count = 0
ramen_list = []
ramen_shop_raw = []
ramen_shop_list = []
ramen_name_list = []
ramen_name_raw = []
ramen_review_raw = []
ramen_review_list = []
unorganized_shops = []
unorganized_unorganized_shops = []
temp_s = ''
ramen_list_group = []
for line in f:
    line = line.strip()
    #### add endpoint and startpoint to items for striping later
    #### catch Â∫óÂÆ∂:(first item of each sublist) to % for Â∫óÂêç
    #### catch G to Z, if not Z catch to the first 0
    start_point = line.replace('‚Ä¶ Êõ¥Â§ö','').replace(' ','').replace('$','').replace('%','')\
                    .replace(u'\u3000',u'')\
                    .replace('Ôºè','').replace('ÂçÄÂüü','').replace('Ôºö',':').replace(':',':')\
                    .replace('Â∫óÂÆ∂:','$Â∫óÂÆ∂:')\
                    .replace('‚ñéÂ∫óÂÆ∂:','$Â∫óÂÆ∂:').replace('‚ñéÂ∫ó„ÄÄ„ÄÄÂêç:','$Â∫óÂÆ∂:')\
                    .replace('Â∫óÂêç:','$Â∫óÂÆ∂:').replace('‚ñéÂ∫ó„ÄÄ„ÄÄÂÆ∂:','$Â∫óÂÆ∂:')\
                    .replace('„ÄêÂ∫óÂÆ∂„Äë','$Â∫óÂÆ∂:').replace('Â∫óÂÆ∂ÂêçÁ®±:','$Â∫óÂÆ∂:')\
                    .replace('‚ñ†Â∫óÂÆ∂Ë≥áË®ä:','$Â∫óÂÆ∂:')\
                    .replace('ÈÑ∞ËøëÂú∞Èªû','%ÈÑ∞ËøëÂú∞Èªû').replace('Ëá®ËøëÂú∞Èªû:','%ÈÑ∞ËøëÂú∞Èªû:')\
                    .replace('ÈÑ∞ËøëÂú∞ÂçÄ','%ÈÑ∞ËøëÂú∞Èªû').replace('ÈÑ∞Ëøë:','%ÈÑ∞ËøëÂú∞Èªû:')\
                    .replace('ÊãâÈ∫µÂêçÁ®±','%.GÊãâÈ∫µÂêçÁ®±').replace('È§êÈªûÂêçÁ®±:','%.GÊãâÈ∫µÂêçÁ®±:')\
                    .replace('È§êÈªû:','%.GÊãâÈ∫µÂêçÁ®±:').replace('ÊãâÈ∫µÂìÅÈ†Ö:','%.GÊãâÈ∫µÂêçÁ®±')\
                    .replace('ÂìÅÈ†Ö:','%.GÊãâÈ∫µÂêçÁ®±:').replace('ÂìÅÂêç:','%.GÊãâÈ∫µÂêçÁ®±:')\
                    .replace('ÂêçÁ®±:','%.GÊãâÈ∫µÂêçÁ®±:').replace('ÂìÅÈ†ÖÂÉπÊ†º:','%.GÊãâÈ∫µÂêçÁ®±:')\
                    .replace('ÈÖçÁΩÆ:','ZÈÖçÁΩÆ').replace('ÈÖç„ÄÄ„ÄÄÁΩÆ','ZÈÖçÁΩÆ').replace('ÈÖçÁΩÆ(','ZÈÖçÁΩÆ')\
                    .replace('\'','').replace('Description','')\
                    .replace('_','').replace('ÂàÜÈöîÁ∑ö','')\
                    .replace('‚ñé','').replace('üÅ¢',' ').replace('-','').replace('‚óé','')\
                    .replace('„Äê',' ').replace('„Äë',':')
    # print(start_point)
    #### replace \u3000 doesnt work
    #### devide all the stores and store them in a list
    for w in start_point:
        temp_s += w
        if w == '$':
            ramen_list.append(temp_s)
            temp_s = ''
# print(ramen_list)

#### first filtering:put items with all the startpoint and endpoint to lists
#### if not sufficient then put into unorganized_shops list
for shops in ramen_list:
    if ('%'not in shops or 'G' not in shops or 'Z' not in shops\
        or shops.index('Z')>shops.index('G')+80) :
        unorganized_shops.append(shops)
    else:
        ramen_shop_raw.append(shops[:shops.index('%')])
        ramen_name_raw.append(shops[shops.index('G')+1:shops.index('Z')])
        ramen_review_raw.append(shops[shops.index('Z')+1:shops.index('Z')+265]+'...')
# print(len(ramen_shop_list))
# print(ramen_name_list)
# print(ramen_review_list)
# print(ramen_list)

#### second filtering
for shops in unorganized_shops:
    if ('G' in shops and '0' in shops):
        ramen_shop_raw.append(shops[:shops.index('%')])
        ramen_name_raw.append(shops[shops.index('G')+1:shops.index('G')+30])
        ramen_review_raw.append(shops[shops.index('G')+19:shops.index('G')+285]+'...')

    else:
        unorganized_unorganized_shops.append(shops)

# print(ramen_shop_raw)

for shops in ramen_shop_raw:
    new_shops = shops.replace('‚ñ†','').replace('2.','')
    if 'Âú∞ÂùÄ' in new_shops and 'Áî®È§ê' in new_shops:
        # print(shops)
        if new_shops.index('Âú∞') < new_shops.index('Áî®'):
            ramen_shop_list.append(new_shops[:new_shops.index('Âú∞')])
        else:
            ramen_shop_list.append(new_shops[:new_shops.index('Áî®')])
    elif 'Âú∞ÂùÄ' in new_shops:
        ramen_shop_list.append(new_shops[:new_shops.index('Âú∞')])
    elif 'Áî®È§ê' in new_shops:
        ramen_shop_list.append(new_shops[:new_shops.index('Áî®')])
    else:
        ramen_shop_list.append(new_shops)


# print(ramen_shop_list)
for names in ramen_name_raw:
    # print(f'original name{names}')
    new_name = names.replace('ÊãâÈ∫µ%.G','').replace('%.G','')
    last_ch = new_name[-1]
    first_ch = new_name[0]
    # ramen_name_list = []
    if '0' in new_name and '00' not in new_name and '2020' not in new_name\
        and last_ch != 'Ôºâ' and last_ch != ')':
        ramen_name_list.append(new_name[:new_name.index('0')+1])
    elif '00' in new_name and last_ch != 'Ôºâ' and last_ch != ')'\
        and '2020' not in new_name:
        ramen_name_list.append(new_name[:new_name.index('00')+2])
    elif first_ch != 'Êãâ':
        ramen_name_list.append(new_name[new_name.index('Êãâ'):])
    elif '0' not in new_name and '00' not in new_name and '/' not in new_name\
        and last_ch.isdigit() == False and last_ch != 'È∫µ' and last_ch != 'È∫∫'\
        and last_ch != 'Ôºâ' and last_ch != ')'and '+' not in new_name:
        new_point =  new_name.replace('È∫µ','È∫µH').replace('È∫∫','È∫µH').replace('ÊãâÈ∫µHÂêçÁ®±','ÊãâÈ∫µÂêçÁ®±')
        if 'H' in new_point:
            ramen_name_list.append(new_point[:new_point.index('H')])
        else:
            ramen_name_list.append(new_point)
    else:
        ramen_name_list.append(new_name)

# print(len(ramen_name_list))

#https://www.cnblogs.com/qmfsun/p/11811990.html
for reviews in ramen_review_raw:
    new_reviews = reviews.replace('ÊãâÈ∫µ%.G','').replace('%.G','').replace('%','').replace('$','')
    first_few_words = new_reviews[0:6]
    if 'ÈÖçÁΩÆ'not in first_few_words:
        pattern="[\u4e00-\u9fa5]+" 
        regex = re.compile(pattern)
        results =  regex.findall(new_reviews)
        # print(results_to_str)
        results_to_str =' '.join([str(elem) for elem in results]) 
        ramen_review_list.append(results_to_str)
        # print(results_to_str)

    else:
        ramen_review_list.append(new_reviews)
        

#coding=utf-8

    
#### debug
# print(len(unorganized_unorganized_shops))
# print(unorganized_unorganized_shops)
# print(len(ramen_shop_list))
# print(len(ramen_name_list))
# print(len(ramen_review_list))
# print(ramen_shop_list)
# print(ramen_name_list)
# print(ramen_review_list)

# print(ramen_name_list.index("ÊãâÈ∫µÂêçÁ®±ÂÉπÊ†º:ÊøÉÂéöÈõûÁôΩÊπØÊãâÈ∫µÈõûËÖøÊç≤230"))
# print(ramen_shop_list.index('Â∫óÂÆ∂:Ê®ÇË∂£Lovecheers'))

# print(ramen_shop_list.index('Â∫óÂÆ∂:‰∏ç‰∫åÂÆ∂ÊãâÈ∫µÂ±ÖÈÖíÂ±ã'))
# print(ramen_name_list.index("ÊãâÈ∫µÂêçÁ®±:ÈÜ¨Ê≤πÂèâÁáíÊãâÈ∫µ180"))



####csv
# https://stackoverflow.com/questions/17704244/writing-python-lists-to-columns-in-csv
df = pd.DataFrame(list(zip(*[ramen_shop_list, ramen_name_list, ramen_review_list])))
col_names = ['stores', 'ramens', 'reviews']
df.columns = col_names
df.to_csv('fb_crawling.csv', index=True)
